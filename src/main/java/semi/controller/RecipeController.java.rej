diff a/src/main/java/semi/controller/RecipeController.java b/src/main/java/semi/controller/RecipeController.java	(rejected hunks)
@@ -16,6 +16,7 @@
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.multipart.MultipartFile;
 
+import naver.storage.NcpObjectStorageService;
 import semi.dao.RecipeDao;
 import semi.dto.RecipeDto;
 import semi.service.RecipeService;
@@ -27,37 +28,45 @@
 
     @Autowired
     private RecipeDao recipeDao;
-
+    
+    @Autowired
+    NcpObjectStorageService storageService;
+    
+    String storagename = "semi-project-eatingalone";
+    String storagefolder = "photo";
     @GetMapping("/recipe/sample")
     public String sample() {
         return "recipe/recipeSample";
     }
 
     @PostMapping("/recipe/insertRecipeApi")
-    public String insertRecipeApi(@ModelAttribute RecipeDto dto, HttpServletRequest request, HttpSession session, @RequestParam List<MultipartFile> upload) {
-        String path = request.getSession().getServletContext().getRealPath("/resources/upload");
-        String realPath = "";
-        if(!upload.get(0).getOriginalFilename().equals("")) {
-            for(MultipartFile multi : upload) {
-                String photo = UUID.randomUUID().toString();
-                String extension = multi.getOriginalFilename().substring(multi.getOriginalFilename().lastIndexOf("."));
-                realPath = path + "/" + photo + extension;
-                try {
-                    multi.transferTo(new File(realPath));
-
-                } catch (IllegalStateException e) {
-                    // TODO Auto-generated catch block
-                    e.printStackTrace();
-                } catch (IOException e) {
-                    // TODO Auto-generated catch block
-                    e.printStackTrace();
-                }
-            }
-
-        }
-        dto.setSRecipePhoto(realPath);
+    public String insertRecipeApi(@ModelAttribute RecipeDto dto, HttpServletRequest request, HttpSession session, @RequestParam MultipartFile upload) {
+//        String path = request.getSession().getServletContext().getRealPath("/resources/upload");
+//        String realPath = "";
+//        if(!upload.get(0).getOriginalFilename().equals("")) {
+//            for(MultipartFile multi : upload) {
+//                String photo = UUID.randomUUID().toString();
+//                String extension = multi.getOriginalFilename().substring(multi.getOriginalFilename().lastIndexOf("."));
+//                realPath = path + "/" + photo + extension;
+//                try {
+//                    multi.transferTo(new File(realPath));
+//
+//                } catch (IllegalStateException e) {
+//                    // TODO Auto-generated catch block
+//                    e.printStackTrace();
+//                } catch (IOException e) {
+//                    // TODO Auto-generated catch block
+//                    e.printStackTrace();
+//                }
+//            }
+//
+//        }
+    	
+        String photo=storageService.uploadFile(storagename, storagefolder, upload);
+   
+        dto.setSRecipePhoto(photo);
         recipeService.insertRecipe(dto);
 
-        return "redirect:/";
+        return "redirect:../";
     }
 }
